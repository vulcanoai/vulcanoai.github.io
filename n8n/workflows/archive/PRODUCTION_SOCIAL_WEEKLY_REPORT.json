{
  "name": "PRODUCTION — Social Weekly Report",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "every": 168
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        480,
        480
      ],
      "id": "a1111111-1111-1111-1111-111111111111",
      "name": "Schedule Weekly"
    },
    {
      "parameters": {
        "url": "https://vulcano.ai/data/index/by-topic.json",
        "options": {
          "timeout": 60000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        736,
        416
      ],
      "id": "b2222222-2222-2222-2222-222222222222",
      "name": "GET_BY_TOPIC"
    },
    {
      "parameters": {
        "url": "https://vulcano.ai/data/index/by-country.json",
        "options": {
          "timeout": 60000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        736,
        544
      ],
      "id": "c3333333-3333-3333-3333-333333333333",
      "name": "GET_BY_COUNTRY"
    },
    {
      "parameters": {
        "url": "https://vulcano.ai/data/index/status.json",
        "options": {
          "timeout": 60000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        736,
        672
      ],
      "id": "d4444444-4444-4444-4444-444444444444",
      "name": "GET_STATUS"
    },
    {
      "parameters": {
        "jsCode": "function pickTop(obj, n){ const arr = Object.entries(obj||{}).sort((a,b)=> b[1]-a[1]).slice(0,n); return arr.map(([k,v])=>({k, v})); }\nfunction fmtList(arr){ return arr.map(x=> x.k+': '+x.v).join(', '); }\nfunction safe(obj){ return (obj && (obj.json || obj.body || obj.data)) || {}; }\nlet byTopic = {}; let byCountry = {}; let status = {};\ntry{ const t = $items('GET_BY_TOPIC',0,0); const j = safe(t); byTopic = (j.json||j.body||j.data||{}).byTopic || {}; }catch(_){}\ntry{ const c = $items('GET_BY_COUNTRY',0,0); const j = safe(c); byCountry = (j.json||j.body||j.data||{}).byCountry || {}; }catch(_){}\ntry{ const s = $items('GET_STATUS',0,0); const j = safe(s); status = (j.json||j.body||j.data||{}); }catch(_){}\nconst topT = pickTop(byTopic, 5);\nconst topC = pickTop(byCountry, 5);\nconst tLine = topT.length ? ('Temas: '+fmtList(topT)) : 'Temas: n/d';\nconst cLine = topC.length ? ('Pa\u00edses: '+fmtList(topC)) : 'Pa\u00edses: n/d';\nconst count = Number(status.feed_count||0);\nconst link = 'https://vulcano.ai/pages/noticias.html';\nconst t1 = `Semana en IA LATAM: ${count>0? (count+ ' art\u00edculos procesados'):''}`.trim();\nconst t2 = `${tLine}. ${cLine}.`;\nreturn [\n  { json: { draft: t1+ ' '+link, link } },\n  { json: { draft: t2+ ' '+link, link } }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        992,
        544
      ],
      "id": "e5555555-5555-5555-5555-555555555555",
      "name": "BUILD_WEEKLY_TWEETS"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Eres el agente social de Vulcano AI. Toma el borrador y reescribe un tweet claro y profesional en \u00f3ptimo espa\u00f1ol para LATAM. Reglas:\n- Mant\u00e9n el enlace EXACTO.\n- M\u00e1ximo 2 hashtags (IA/LatAm/pa\u00eds/tema).\n- Sin emojis.\n- 280 caracteres m\u00e1ximo.\nDevuelve SOLO JSON: {\\n  \\\"text\\\": \\\"...\\\"\\n}\\nBorrador: {{$json.draft}}"
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1216,
        544
      ],
      "id": "f6666666-6666-6666-6666-666666666666",
      "name": "AI Polisher (Weekly)"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1216,
        736
      ],
      "id": "a7777777-7777-7777-7777-777777777777",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LHo2RkL2RsO6qUqu",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const inp = $json || {}; const link = String(inp.link||''); const raw = String(inp.text||inp.draft||'');\nfunction keepLink(t){ if(!link) return t; const has = t.includes(link); if(!has){ if (t.length + 1 + link.length <= 280) return (t + ' ' + link).trim(); let room = 280 - link.length - 1; let cut = t.slice(0, Math.max(0, room-1)); const i = cut.lastIndexOf(' '); t = (i>40? cut.slice(0,i) : cut).trimEnd() + '…'; return (t + ' ' + link).trim(); } return t; }\nlet text = raw.split('\\n').join(' ').split('\\r').join(' ').replace(/  +/g,' ').trim();\nif (text.length > 280){ let cut = text.slice(0,279); const i = cut.lastIndexOf(' '); text = (i>40? cut.slice(0,i) : cut).trimEnd() + '…'; }\ntext = keepLink(text);\nreturn [{ json: { text, link } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1440,
        544
      ],
      "id": "b8888888-8888-8888-8888-888888888888",
      "name": "VALIDATE_TWEET"
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        1664,
        544
      ],
      "id": "c9999999-9999-9999-9999-999999999999",
      "name": "Create Tweet (Weekly)",
      "credentials": {
        "twitterOAuth2Api": {
          "id": "YrtK0hPXlAIdV57G",
          "name": "X account"
        }
      }
    }
  ],
  "connections": {
    "Schedule Weekly": {
      "main": [
        [
          {
            "node": "GET_BY_TOPIC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET_BY_TOPIC": {
      "main": [
        [
          {
            "node": "GET_BY_COUNTRY",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET_BY_COUNTRY": {
      "main": [
        [
          {
            "node": "GET_STATUS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET_STATUS": {
      "main": [
        [
          {
            "node": "BUILD_WEEKLY_TWEETS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BUILD_WEEKLY_TWEETS": {
      "main": [
        [
          {
            "node": "AI Polisher (Weekly)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Polisher (Weekly)": {
      "main": [
        [
          {
            "node": "VALIDATE_TWEET",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "ai_languageModel": [
        [
          {
            "node": "OpenAI Chat Model",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "VALIDATE_TWEET": {
      "main": [
        [
          {
            "node": "Create Tweet (Weekly)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "id": "WEEKLY-REPORT",
  "tags": []
}
