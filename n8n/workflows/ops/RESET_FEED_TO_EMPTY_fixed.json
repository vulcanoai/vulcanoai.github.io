{
  "name": "RESET â€” Feed to Empty (fixed)",
  "nodes": [
    { "parameters": { "httpMethod": "POST", "path": "reset-feed", "responseMode": "responseNode", "options": { "rawBody": true } }, "id": "wh", "name": "RESET_IN", "type": "n8n-nodes-base.webhook", "typeVersion": 1, "position": [ -620, 60 ] },
    {
      "parameters": {
        "jsCode": "let body=$json.body; if(typeof body==='string'){ try{ body=JSON.parse(body);}catch{ body={}; } } const owner=body?.repo_owner||'vulcanoai'; const repo=body?.repo_name||'vulcanoai.github.io'; const branch=body?.branch||'main'; const base=`https://api.github.com/repos/${owner}/${repo}/contents`; const path='data/feed-latest.json'; const payload={ version:'v1.0', generated_at: new Date().toISOString(), articles: [] }; const content=Buffer.from(JSON.stringify(payload,null,2)).toString('base64'); return [{ json: { base, branch, path, content, message: 'chore(feed): reset to empty' } }];"
      },
      "id": "build-gh",
      "name": "BUILD_GH_BODY",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [ -420, 60 ]
    },
    { "parameters": { "url": "={{$json.base}}/{{ $json.path }}?ref={{$json.branch}}", "authentication": "predefinedCredentialType", "nodeCredentialType": "githubApi", "sendHeaders": true, "headerParameters": { "parameters": [ { "name": "Accept", "value": "application/vnd.github+json" } ] }, "options": { "timeout": 30000 } }, "id": "gh-get-sha", "name": "GITHUB_GET_SHA", "type": "n8n-nodes-base.httpRequest", "typeVersion": 4, "position": [ -220, 60 ], "alwaysOutputData": true, "continueOnFail": true, "credentials": { "githubApi": { "id": "fiWvt8LJXl85zjSx", "name": "GitHub account" } } },
    {
      "parameters": {
        "jsCode": "const meta=$json||{}; const respRaw=$items('GITHUB_GET_SHA',0,0)?.json||{}; const resp=(respRaw.body&&typeof respRaw.body==='object')?respRaw.body:((respRaw.data&&typeof respRaw.data==='object')?respRaw.data:respRaw); const body={ message: meta.message||'update', content: meta.content, branch: meta.branch||'main' }; if(resp&&resp.sha) body.sha=resp.sha; return [{ json: { url: `${meta.base}/${meta.path}`, body } }];"
      },
      "id": "build-put",
      "name": "BUILD_PUT",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [ -20, 60 ]
    },
    { "parameters": { "method": "PUT", "url": "={{$json.url}}", "authentication": "predefinedCredentialType", "nodeCredentialType": "githubApi", "sendHeaders": true, "headerParameters": { "parameters": [ { "name": "Accept", "value": "application/vnd.github+json" }, { "name": "Content-Type", "value": "application/json" } ] }, "sendBody": true, "specifyBody": "json", "jsonBody": "={{ $json.body }}" }, "id": "gh-put", "name": "GITHUB_PUT", "type": "n8n-nodes-base.httpRequest", "typeVersion": 4, "position": [ 180, 60 ], "credentials": { "githubApi": { "id": "fiWvt8LJXl85zjSx", "name": "GitHub account" } } },
    { "parameters": { "options": { "responseCode": 200 } }, "id": "respond", "name": "RESPOND", "type": "n8n-nodes-base.respondToWebhook", "typeVersion": 1, "position": [ 380, 60 ] }
  ],
  "connections": {
    "RESET_IN": { "main": [ [ { "node": "BUILD_GH_BODY", "type": "main", "index": 0 } ] ] },
    "BUILD_GH_BODY": { "main": [ [ { "node": "GITHUB_GET_SHA", "type": "main", "index": 0 } ] ] },
    "GITHUB_GET_SHA": { "main": [ [ { "node": "BUILD_PUT", "type": "main", "index": 0 } ] ] },
    "BUILD_PUT": { "main": [ [ { "node": "GITHUB_PUT", "type": "main", "index": 0 } ] ] },
    "GITHUB_PUT": { "main": [ [ { "node": "RESPOND", "type": "main", "index": 0 } ] ] }
  },
  "active": false,
  "settings": { "executionOrder": "v1", "callerPolicy": "workflowsFromSameOwner" },
  "versionId": "v1-reset-empty-fixed",
  "id": "wk-reset-feed-empty-fixed",
  "tags": ["reset","feed","empty"]
}

