{
  "name": "SOCIALMEDIA_POLISHER_TEST_v20250914-1200",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "every": 45
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        480,
        480
      ],
      "id": "7e7c1b1a-6f0c-4fdd-8bb1-1f2d4af78901",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "https://vulcano.ai/data/feed-latest.json",
        "options": {
          "timeout": 60000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        736,
        480
      ],
      "id": "9a9f0c0f-7b9a-4e44-b66a-0f5280f266aa",
      "name": "FETCH_FEED_LATEST",
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const data = $json;\nconst arr = Array.isArray(data.articles) ? data.articles : (Array.isArray(data.items) ? data.items : []);\nif (!arr.length) return [];\nconst allowLangs = new Set(['es','pt']);\nfunction norm(x, d=''){ return (x==null?d:String(x)).trim(); }\nfunction normalize(a){\n  return {\n    title: norm(a.title),\n    summary: norm(a.summary),\n    url: norm(a.url||a.link),\n    source: norm(a.source),\n    source_url: norm(a.source_url),\n    country: norm(a.country,'Regional'),\n    topics: Array.isArray(a.topics)?a.topics:[],\n    language: norm(a.language||'es').slice(0,2).toLowerCase(),\n    published_at: norm(a.published_at||new Date().toISOString())\n  };\n}\nconst items = arr.map(normalize)\n  .filter(a => a.title && a.url && allowLangs.has(a.language))\n  .sort((x,y)=> new Date(y.published_at) - new Date(x.published_at));\nconst pick = items[ Math.floor(Math.random() * Math.min(items.length, 20)) ] || items[0];\nif (!pick) return [];\nconst d = (pick.published_at||'').slice(0,10);\nfunction slugify(s){ return (s||'').normalize('NFD').replace(/[\\u0300-\\u036f]/g,'').toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/(^-|-$)/g,'').slice(0,80); }\nfunction shortHash(s){ let h=0; s=(s||'').toString(); for (let i=0;i<s.length;i++){ h=((h<<5)-h)+s.charCodeAt(i); h|=0;} return ('00000000'+(h>>>0).toString(16)).slice(-8);}\nconst slug = slugify(pick.title);\nconst uniq = shortHash(pick.url || pick.title);\nconst internalJson = `https://vulcano.ai/data/entries/${d}/${slug}-${uniq}.json`;\nconst internalPage = `https://vulcano.ai/pages/noticias.html?dia=${encodeURIComponent(d)}&q=${encodeURIComponent(pick.title)}`;\nreturn [{ json: { article: pick, link: internalPage, link_json: internalJson } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        960,
        480
      ],
      "id": "b1f2d3c4-5e6f-7081-92ab-3c4d5e6f7081",
      "name": "SELECT_FOR_TWEET"
    },
    {
      "parameters": {
        "jsCode": "const a = $json.article || {}; const link = $json.link || ''; const norm = s => (s||'').toString().trim();\nconst title = norm(a.title); const summary = norm(a.summary); const country = norm(a.country); const topics = Array.isArray(a.topics)?a.topics:[];\nfunction capWords(s){ return String(s||'').trim().split(/\\s+/).map(w => w ? (w[0].toUpperCase()+w.slice(1).toLowerCase()) : '').join(' '); }\nfunction tagify(s){ return capWords((s||'').normalize('NFD').replace(/[\\u0300-\\u036f]/g,'').replace(/[^A-Za-z0-9]/g,' ').replace(/\\s{2,}/g,' ').trim()); }\nconst tags = new Set(['IA','LatAm']); if (country) tags.add(tagify(country)); for (const t of topics.slice(0,2)){ if (t) tags.add(tagify(t)); }\nconst hashtags = Array.from(tags).map(x=> '#'+x).join(' ');\nlet base = `${title}`; let extra = summary ? ` — ${summary}` : '';\nconst budget = 280; const fixed = (hashtags + ' ' + link).trim(); const maxLen = Math.max(0, budget - (fixed.length ? (fixed.length + 1) : 0));\nlet txt = `${base}${extra}`;\nif (txt.length > maxLen){ const cut = txt.slice(0, Math.max(0, maxLen-1)); const i = cut.lastIndexOf(' '); txt = (i>40? cut.slice(0,i) : cut).trimEnd() + '…'; }\nconst out = fixed ? `${txt} ${fixed}` : txt; return [{ json: { draft: out, article: a, link, hashtags } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1184,
        480
      ],
      "id": "c3d4e5f6-7081-92ab-3c4d-5e6f708192ab",
      "name": "BUILD_TWEET_NEWS"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Eres el agente social de Vulcano AI. Mejora el siguiente tweet en español para que sea claro, natural y sin errores. Reglas:\n- Mantén el enlace EXACTAMENTE igual, no lo elimines ni modifiques.\n- Mantén como máximo 3 hashtags relevantes (IA/LatAm/país/tema).\n- No uses emojis.\n- Tono: informativo y profesional (no críptico).\n- 280 caracteres como máximo (incluyendo hashtags y enlace).\nDevuelve SOLO JSON: {\n  \"text\": \"...tweet final...\"\n}\nContenido:\nTítulo: {{$json.article.title}}\nResumen: {{$json.article.summary}}\nPaís: {{$json.article.country}}\nTemas: {{$json.article.topics}}\nBorrador: {{$json.draft}}\nEnlace: {{$json.link}}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1408,
        480
      ],
      "id": "d4e5f670-8192-ab3c-4d5e-6f708192ab3c",
      "name": "AI Polisher (News)"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1408,
        672
      ],
      "id": "e5f67081-92ab-3c4d-5e6f-708192ab3c4d",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LHo2RkL2RsO6qUqu",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const inp = $json || {}; const link = String(inp.link||''); const raw = String(inp.text||inp.draft||'');\nfunction keepLink(t){ if(!link) return t; const has = t.includes(link); if(!has){ if (t.length + 1 + link.length <= 280) return (t + ' ' + link).trim(); let room = 280 - link.length - 1; let cut = t.slice(0, Math.max(0, room-1)); const i = cut.lastIndexOf(' '); t = (i>40? cut.slice(0,i) : cut).trimEnd() + '…'; return (t + ' ' + link).trim(); } return t; }\nlet text = raw.split('\\n').join(' ').split('\\r').join(' ').replace(/  +/g,' ').trim();\nif (text.length > 280){ let cut = text.slice(0,279); const i = cut.lastIndexOf(' '); text = (i>40? cut.slice(0,i) : cut).trimEnd() + '…'; }\ntext = keepLink(text);\ntext = text.replace(/#Per(\\b)/g,'#Peru$1').replace(/#Mex(\\b)/g,'#Mexico$1');\nreturn [{ json: { text, link } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1632,
        480
      ],
      "id": "f6708192-ab3c-4d5e-6f70-8192ab3c4d5e",
      "name": "VALIDATE_TWEET"
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        1856,
        480
      ],
      "id": "08192ab3-c4d5-e6f7-0819-2ab3c4d5e6f7",
      "name": "Create Tweet (News)",
      "credentials": {
        "twitterOAuth2Api": {
          "id": "YrtK0hPXlAIdV57G",
          "name": "X account"
        }
      }
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "FETCH_FEED_LATEST",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FETCH_FEED_LATEST": {
      "main": [
        [
          {
            "node": "SELECT_FOR_TWEET",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SELECT_FOR_TWEET": {
      "main": [
        [
          {
            "node": "BUILD_TWEET_NEWS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BUILD_TWEET_NEWS": {
      "main": [
        [
          {
            "node": "AI Polisher (News)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Polisher (News)": {
      "main": [
        [
          {
            "node": "VALIDATE_TWEET",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "ai_languageModel": [
        [
          {
            "node": "OpenAI Chat Model",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "VALIDATE_TWEET": {
      "main": [
        [
          {
            "node": "Create Tweet (News)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "id": "SOCIALMEDIA_POLISHER_TEST_v20250914-1200",
  "tags": []
}
